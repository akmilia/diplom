// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using diplom;

#nullable disable

namespace diplom.Migrations
{
    [DbContext(typeof(DiplomSchoolContext))]
    [Migration("20250326013713_newShows")]
    partial class newShows
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("diplom.Models.Attendance", b =>
                {
                    b.Property<int>("Idattendance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idattendance");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idattendance"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int>("Idschedule")
                        .HasColumnType("integer")
                        .HasColumnName("idschedule");

                    b.HasKey("Idattendance")
                        .HasName("attendance_pkey");

                    b.HasIndex("Idschedule");

                    b.ToTable("attendance", (string)null);
                });

            modelBuilder.Entity("diplom.Models.BilNebil", b =>
                {
                    b.Property<int>("Idattendance")
                        .HasColumnType("integer")
                        .HasColumnName("idattendance");

                    b.Property<int>("Iduser")
                        .HasColumnType("integer")
                        .HasColumnName("iduser");

                    b.Property<bool?>("Status")
                        .HasColumnType("boolean")
                        .HasColumnName("status");

                    b.HasKey("Idattendance", "Iduser")
                        .HasName("bil_nebil_pkey");

                    b.ToTable("bil_nebil", (string)null);
                });

            modelBuilder.Entity("diplom.Models.Cabinet", b =>
                {
                    b.Property<int>("Idcabinet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idcabinet");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idcabinet"));

                    b.Property<string>("Description")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("description");

                    b.HasKey("Idcabinet")
                        .HasName("cabinets_pkey");

                    b.ToTable("cabinets", (string)null);
                });

            modelBuilder.Entity("diplom.Models.Group", b =>
                {
                    b.Property<int>("Idgroups")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idgroups");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idgroups"));

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("name");

                    b.HasKey("Idgroups")
                        .HasName("groups_pkey");

                    b.ToTable("groups", (string)null);
                });

            modelBuilder.Entity("diplom.Models.GroupsUser", b =>
                {
                    b.Property<int>("GroupsIdgroups")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("groups_idgroups");

                    b.Property<int>("UsersIdusers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("users_idusers");

                    b.HasIndex("GroupsIdgroups");

                    b.HasIndex("UsersIdusers");

                    b.ToTable("groups_users", (string)null);
                });

            modelBuilder.Entity("diplom.Models.Role", b =>
                {
                    b.Property<int>("Idroles")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idroles");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idroles"));

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("name");

                    b.HasKey("Idroles")
                        .HasName("roles_pkey");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("diplom.Models.Schedule", b =>
                {
                    b.Property<int>("Idschedule")
                        .HasColumnType("integer")
                        .HasColumnName("idschedule");

                    b.Property<int>("CabinetsIdcabinet")
                        .HasColumnType("integer")
                        .HasColumnName("cabinets_idcabinet");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("integer")
                        .HasColumnName("day_of_week");

                    b.Property<int?>("GroupsIdgroup")
                        .HasColumnType("integer")
                        .HasColumnName("groups_idgroup");

                    b.Property<int>("SubjectsIdsubjects")
                        .HasColumnType("integer")
                        .HasColumnName("subjects_idsubjects");

                    b.Property<DateTimeOffset>("Time")
                        .HasColumnType("time with time zone")
                        .HasColumnName("time");

                    b.Property<int>("UsersIdusers")
                        .HasColumnType("integer")
                        .HasColumnName("users_idusers");

                    b.HasKey("Idschedule")
                        .HasName("schedule_pk");

                    b.HasIndex("CabinetsIdcabinet");

                    b.HasIndex("GroupsIdgroup");

                    b.HasIndex("SubjectsIdsubjects");

                    b.HasIndex("UsersIdusers");

                    b.ToTable("schedule", (string)null);
                });

            modelBuilder.Entity("diplom.Models.Subject", b =>
                {
                    b.Property<int>("Idsubjects")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idsubjects");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idsubjects"));

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("name");

                    b.HasKey("Idsubjects")
                        .HasName("subjects_pkey");

                    b.ToTable("subjects", (string)null);
                });

            modelBuilder.Entity("diplom.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type1")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("types_pkey");

                    b.ToTable("types", (string)null);
                });

            modelBuilder.Entity("diplom.Models.User", b =>
                {
                    b.Property<int>("Idusers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("idusers");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Idusers"));

                    b.Property<DateOnly?>("Birthdate")
                        .HasColumnType("date")
                        .HasColumnName("birthdate");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("login");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("password");

                    b.Property<string>("Paternity")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("paternity");

                    b.Property<int>("RolesIdroles")
                        .HasColumnType("integer")
                        .HasColumnName("roles_idroles");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("surname");

                    b.HasKey("Idusers")
                        .HasName("users_pkey");

                    b.HasIndex("RolesIdroles");

                    b.HasIndex(new[] { "Idusers" }, "users_idusers_key")
                        .IsUnique();

                    b.HasIndex(new[] { "Login" }, "users_login_key")
                        .IsUnique();

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("diplom.Models.scheduleshow", b =>
                {
                    b.Property<int>("idschedule")
                        .HasColumnType("integer");

                    b.Property<int>("cabinet")
                        .HasColumnType("integer");

                    b.Property<string>("day_of_week")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("group_nam")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("subject_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("teacher")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("idschedule");

                    b.ToTable((string)null);

                    b.ToView("scheduleshow", (string)null);
                });

            modelBuilder.Entity("diplom.Models.subjectsshow", b =>
                {
                    b.Property<int>("subject_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("subject_id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("subject_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("type_id")
                        .HasColumnType("integer");

                    b.Property<string>("type_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("subject_id");

                    b.ToTable("SubjectShowItems");
                });

            modelBuilder.Entity("diplom.Models.types_subjects", b =>
                {
                    b.Property<int>("types_id")
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    b.Property<int>("subjects_idsubjects")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.HasKey("types_id", "subjects_idsubjects");

                    b.ToTable("types_subjects");
                });

            modelBuilder.Entity("diplom.Models.usersshow", b =>
                {
                    b.Property<int>("idusers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("idusers"));

                    b.Property<string>("full_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("idroles")
                        .HasColumnType("integer");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("user_role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("idusers");

                    b.ToTable("userShowItems");
                });

            modelBuilder.Entity("diplom.Models.Attendance", b =>
                {
                    b.HasOne("diplom.Models.Schedule", "IdscheduleNavigation")
                        .WithMany("Attendances")
                        .HasForeignKey("Idschedule")
                        .IsRequired()
                        .HasConstraintName("attendance_schedule_idschedule");

                    b.Navigation("IdscheduleNavigation");
                });

            modelBuilder.Entity("diplom.Models.BilNebil", b =>
                {
                    b.HasOne("diplom.Models.Attendance", "IdattendanceNavigation")
                        .WithMany("BilNebils")
                        .HasForeignKey("Idattendance")
                        .IsRequired()
                        .HasConstraintName("bil_attendance_idattendance");

                    b.Navigation("IdattendanceNavigation");
                });

            modelBuilder.Entity("diplom.Models.GroupsUser", b =>
                {
                    b.HasOne("diplom.Models.Group", "GroupsIdgroupsNavigation")
                        .WithMany()
                        .HasForeignKey("GroupsIdgroups")
                        .IsRequired()
                        .HasConstraintName("groups_users_groups_idgroups_fkey");

                    b.HasOne("diplom.Models.User", "UsersIdusersNavigation")
                        .WithMany()
                        .HasForeignKey("UsersIdusers")
                        .IsRequired()
                        .HasConstraintName("groups_users_users_idusers_fkey");

                    b.Navigation("GroupsIdgroupsNavigation");

                    b.Navigation("UsersIdusersNavigation");
                });

            modelBuilder.Entity("diplom.Models.Schedule", b =>
                {
                    b.HasOne("diplom.Models.Cabinet", "CabinetsIdcabinetNavigation")
                        .WithMany("Schedules")
                        .HasForeignKey("CabinetsIdcabinet")
                        .IsRequired()
                        .HasConstraintName("schedule_cabinets_idcabinet_fkey");

                    b.HasOne("diplom.Models.Group", "GroupsIdgroupNavigation")
                        .WithMany("Schedules")
                        .HasForeignKey("GroupsIdgroup")
                        .HasConstraintName("schedule_group_idgroup_fkey");

                    b.HasOne("diplom.Models.Subject", "SubjectsIdsubjectsNavigation")
                        .WithMany("Schedules")
                        .HasForeignKey("SubjectsIdsubjects")
                        .IsRequired()
                        .HasConstraintName("schedule_subjects_idsubjects_fkey");

                    b.HasOne("diplom.Models.User", "UsersIdusersNavigation")
                        .WithMany("Schedules")
                        .HasForeignKey("UsersIdusers")
                        .IsRequired()
                        .HasConstraintName("schedule_users_idusers_fkey");

                    b.Navigation("CabinetsIdcabinetNavigation");

                    b.Navigation("GroupsIdgroupNavigation");

                    b.Navigation("SubjectsIdsubjectsNavigation");

                    b.Navigation("UsersIdusersNavigation");
                });

            modelBuilder.Entity("diplom.Models.User", b =>
                {
                    b.HasOne("diplom.Models.Role", "RolesIdrolesNavigation")
                        .WithMany("Users")
                        .HasForeignKey("RolesIdroles")
                        .IsRequired()
                        .HasConstraintName("users_roles_idroles_fkey");

                    b.Navigation("RolesIdrolesNavigation");
                });

            modelBuilder.Entity("diplom.Models.Attendance", b =>
                {
                    b.Navigation("BilNebils");
                });

            modelBuilder.Entity("diplom.Models.Cabinet", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("diplom.Models.Group", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("diplom.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("diplom.Models.Schedule", b =>
                {
                    b.Navigation("Attendances");
                });

            modelBuilder.Entity("diplom.Models.Subject", b =>
                {
                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("diplom.Models.User", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
